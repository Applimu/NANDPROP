
input first number:
IU I1 ++ IU I0 ++ IU I0 ++ IU I0 ++

append carry in at the end:
I0 +

then go back to the start:
-- -- -- --

get input for the second number:
IU +++ IU +++ IU +++ IU ++

loop starting from the lsb. computes a full addition and breaks when
it reaches the end marker
I0[D--

half adder: C++C-NCC-S+N+N-N-      this puts !carry below the output

move to next two bits: +

half adder: C++C-NCC-S+N+N-N-

bit or the two `!carry`s together: -N

-
B]D

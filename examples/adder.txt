

input first number
IU I0 IU I0 IU I0 IU

marker for end of numbers: I1

move back to lsb, and add carry in
++++++++ I0

input second number
IU-- IU-- IU-- IU--

move to end
++++++++++++

loop starting from the lsb. computes a full addition and breaks when
it reaches the end marker
I0[D--

half adder: C++C-NCC-S+N+N-N-      this puts !carry below the output

move to next two bits: +

half adder: C++C-NCC-S+N+N-N-

bit or the two `!carry`s together: -N

-
B]D
